openapi: 3.0.0
info:
  title: LAT API
  version: 1.0.0
  description: API for managing addresses, studios, and calendar entries.

servers:
  - url: http://localhost:8080/api
    description: Local Development Server

paths:
  /addresses:
    get:
      summary: Get all addresses
      description: Retrieves a list of all addresses.
      responses:
        '200':
          description: A list of AddressDTO objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressDto'
      tags:
        - Address

    post:
      summary: Create a new address
      description: Creates a new address from the provided data.
      requestBody:
        description: The AddressDTO object to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
      responses:
        '201':
          description: Address successfully created.
        '304':
          description: Address not created (Not Modified).
      tags:
        - Address

  /addresses/{addressId}:
    get:
      summary: Get a specific address
      description: Retrieves a specific address by its ID.
      parameters:
        - name: addressId
          in: path
          required: true
          description: The ID of the address to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested AddressDTO.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDto'
        '404':
          description: Address not found.
      tags:
        - Address

  /studios:
    get:
      summary: Get all studios
      description: Retrieves a list of all studios.
      responses:
        '200':
          description: A list of StudioDTO objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudioDto'
      tags:
        - Studio

    post:
      summary: Create a new studio
      description: Creates a new studio from the provided data.
      requestBody:
        description: The StudioDTO object to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudioDto'
      responses:
        '201':
          description: Studio successfully created.
        '304':
          description: Studio not created (Not Modified).
      tags:
        - Studio

  /studios/{studioId}:
    get:
      summary: Get a specific studio
      description: Retrieves a specific studio by its ID.
      parameters:
        - name: studioId
          in: path
          required: true
          description: The ID of the studio to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested StudioDTO.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudioDto'
        '404':
          description: Studio not found.
      tags:
        - Studio

    delete:
      summary: Delete a studio
      description: Deletes a specific studio by its ID.
      parameters:
        - name: studioId
          in: path
          required: true
          description: The ID of the studio to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Studio successfully deleted.
        '404':
          description: Studio not found.
      tags:
        - Studio

  /calendar:
    get:
      summary: Get all calendar entries
      description: Retrieves a list of all calendar entries.
      responses:
        '200':
          description: A list of CalendarEntryDTO objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarEntryDto'
      tags:
        - Calendar

    post:
      summary: Create a new calendar entry
      description: Creates a new calendar entry from the provided data.
      requestBody:
        description: The CalendarEntryDTO object to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEntryDto'
      responses:
        '201':
          description: Calendar entry successfully created.
        '304':
          description: Calendar entry not created (Not Modified).
      tags:
        - Calendar

  /calendar/{entryId}:
    get:
      summary: Get a specific calendar entry
      description: Retrieves a specific calendar entry by its ID.
      parameters:
        - name: entryId
          in: path
          required: true
          description: The ID of the calendar entry to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested CalendarEntryDTO.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEntryDto'
        '404':
          description: Calendar entry not found.
      tags:
        - Calendar

components:
  schemas:
    AddressDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the address.
        houseNumber:
          type: integer
          description: The house number of the address.
        street:
          type: string
          description: The street name of the address.
        postalCode:
          type: string
          description: The postal code of the address.
        city:
          type: string
          description: The city of the address.
        country:
          type: string
          description: The country of the address.
      example:
        id: 1
        houseNumber: 123
        street: "Main Street"
        postalCode: "12345"
        city: "Sample City"
        country: "Sample Country"

    StudioDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the studio.
        prizePerDay:
          type: number
          format: double
          description: The daily rental price of the studio.
        addressId:
          type: integer
          description: The ID of the address where the studio is located.
      example:
        id: 1
        prizePerDay: 150.0
        addressId: 1

    CalendarEntryDto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the calendar entry.
        studioId:
          type: integer
          description: The ID of the studio associated with the calendar entry.
        startDate:
          type: string
          format: date
          description: The start date of the calendar entry.
        endDate:
          type: string
          format: date
          description: The end date of the calendar entry.
        firstName:
          type: string
          description: The first name of the person who booked the studio.
        lastName:
          type: string
          description: The last name of the person who booked the studio.
        email:
          type: string
          format: email
          description: The email of the person who booked the studio.
      example:
        id: 1
        studioId: 1
        startDate: "2024-08-01"
        endDate: "2024-08-02"
        firstName: "John"
        lastName: "Doe"
        email: "john.doe@example.com"
